@model crudapiwithjquery.Models.Product

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<form id="editProductForm">
    <input type="hidden" id="productId" asp-for="Id" /> <!-- Use asp-for for proper binding -->
    <div class="form-group">
        <label asp-for="Name" class="control-label"></label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Price" class="control-label"></label>
        <input asp-for="Price" class="form-control" />
        <span asp-validation-for="Price" class="text-danger"></span>
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Save</button> <!-- Changed input to button type -->
    </div>
</form>

@section Scripts {
    <script>
        $(document).ready(function () {
            var productId = $('#productId').val(); // Corrected variable name

            // AJAX request to fetch product data
            $.ajax({
                url: '/api/ProductsApi/' + productId, // Use productId here
                method: 'GET',
                success: function (data) {
                    // Populate form fields with fetched data
                    $('#Name').val(data.name);
                    $('#Price').val(data.price);
                },
                error: function (error) {
                    console.error('Error fetching product data:', error);
                }
            });

            // Form submission handler
            $('#editProductForm').submit(function (event) {
                event.preventDefault();

                var formData = {
                    id: productId, // Corrected variable name
                    name: $('#Name').val(),
                    price: $('#Price').val()
                };

                // AJAX request to update product data
                $.ajax({
                    url: '/api/ProductsApi/' + productId,
                    method: 'PUT',
                    contentType: 'application/json',
                    data: JSON.stringify(formData),
                    success: function () {
                        window.location.href = '/Products'; // Redirect to products list on success
                    },
                    error: function (error) {
                        console.error('Error updating product:', error);
                    }
                });
            });
        });
    </script>
    @{
    await Html.PartialAsync("_ValidationScriptsPartial");
}
